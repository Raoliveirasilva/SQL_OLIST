CREATE DATABASE OLIST;

USE OLIST;

-- REALIZEI A IMPORTAÇÂO DOS DADOS

-- SELECT DE TODAS AS TABELAS PARA VERIFICAR AS INFORMAÇÕES
SELECT TOP 10  * FROM [dbo].[TB_CG_OLIST_SELLERS]

-- Fui criando as tabelas subscrevendo as informações antigas pelas novas
-- CRIAÇÂO DAS TABELAS DE PRODUÇÃO
CREATE TABLE TB_ACT_OLIST_SELLERS (
SELLER_ID NVARCHAR(100),
SELLER_ZIP_CODE_PREFIX NVARCHAR(15),
SELLER_CITY NVARCHAR(50),
SELLER_STATE NVARCHAR(5),
);

--Apaga a tabela
drop TABLE TB_ACT_OLIST_ORDERS
  
-- RETIRA OS CAMPOS SEM DADOS E SUSBTITUI POR NULL
UPDATE TB_CG_OLIST_ORDERS 
SET ORDER_APPROVED_AT = NULL
WHERE ORDER_APPROVED_AT = ''

-- CONVERTE OS DADOS NO FORMATO VACHAR PARA DATETIME
ALTER TABLE TB_CG_OLIST_ORDERS
ALTER COLUMN ORDER_ESTIMATED_DELIVERY_DATE DATETIME

-- VISUALIZA OS TIPOS DOS DADOS QUE A TABELA POSSUI
EXEC sp_columns TB_CG_OLIST_PRODUCTS

-- FAZ O SELECT DA TABELA PARA VISUALIZAR AS INFORMAÇÕES ARMAZENADAS
SELECT * FROM TB_ACT_OLIST_SELLERS

-- TRANSFERE OS DADOS DE UMA TABELA PARA OUTRA
INSERT INTO TB_ACT_OLIST_SELLERS
SELECT * FROM TB_CG_OLIST_SELLERS

-- QUAIS CIDADES FIZERAM MAIS PEDIDOS?

SELECT * FROM TB_ACT_OLIST_ORDERS
SELECT * FROM TB_ACT_OLIST_CUSTOMER

--CRIA UMA VIEW QUE JÁ MOSTRA O RESULTADO DO CODIGO ABAIXO, SEM PRECISAR ESCREVE-LO NOVAMENTE
CREATE VIEW VW_PEDIDOS_POR_CLIENTE
AS
SELECT O.*,C.CUSTOMER_CITY, C.CUSTOMER_STATE
FROM TB_ACT_OLIST_ORDERS AS O
INNER JOIN TB_ACT_OLIST_CUSTOMER AS C ON O.CUSTOMER_ID = C.CUSTOMER_ID

-- SELECT DA VIEW CRIADA ANTERIORMENTE, PARA VISUALIZAR OS DADOS SOLICITADOS
-- MOSTRANDO AS CIDADES QUE REALIZARAM PEDIDOS
SELECT * FROM VW_PEDIDOS_POR_CLIENTE

-- PARA UM DETALHAMENTO MELHOR IMPORTEI OS DADOS TRATADOS PARA O EXECEL ONDE CRIEI UMA TABELA DINAMICA
-- QUE MOSTRA OS DADOS DE FORMA MAIS ORGANIZADA;
